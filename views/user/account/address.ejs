<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Address - CareZon</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/user/css/headerAndFooter.css">
    <link rel="stylesheet" href="/user/css/sidebar.css">
    <link rel="stylesheet" href="/user/css/address.css">  
</head>
<body>
    <%- include('../../views/partials/user/header.ejs') %>
    
    <div class="account-page-wrapper">
        <button class="mobile-toggle" id="mobileToggle">
            <i class="fas fa-bars"></i>
        </button>
        
        <div class="sidebar-overlay" id="sidebarOverlay"></div>
        
        <div class="main-container">
            <%- include('../../views/partials/user/sidebar.ejs') %>
            
            <div class="content-area">
                <div class="container-fluid">
                    <!-- Address Header -->
                    <div class="address-header">
                        <h3>Manage Addresses</h3>
                    </div>

                    <!-- Add New Address Button -->
                    <div class="mb-4">
                        <button class="add-address-btn" onclick="showAddForm()">
                            <i class="fas fa-plus"></i> Add A New Address
                        </button>
                    </div>

                    <!-- Existing Addresses -->
                    <div class="addresses-list" id="addressesList">
                        <% if (addresses && addresses.length > 0) { %>
                            <% addresses.forEach(address => { %>
                                <div class="address-card" data-address-id="<%= address._id %>">
                                    <% if (address.isDefault) { %>
                                        <div class="default-indicator">
                                            <i class="fas fa-star"></i> Default
                                        </div>
                                    <% } %>
                                    <div class="address-type-badge <%= address.addressType %>">
                                        <%= address.addressType.toUpperCase() %>
                                    </div>
                                    <div class="address-actions">
                                        <div class="dropdown">
                                            <button class="dropdown-toggle-custom" data-bs-toggle="dropdown">
                                                <i class="fas fa-ellipsis-v"></i>
                                            </button>
                                            <ul class="dropdown-menu dropdown-menu-custom dropdown-menu-end">
                                                <% if (!address.isDefault) { %>
                                                    <li><button class="dropdown-item dropdown-item-custom default-btn" onclick="setDefaultAddress('<%= address._id %>')">
                                                        <i class="fas fa-star me-2"></i> Set as Default
                                                    </button></li>
                                                <% } %>
                                                <li><button class="dropdown-item dropdown-item-custom edit" onclick="editAddress('<%= address._id %>')">
                                                    <i class="fas fa-edit me-2"></i> Edit
                                                </button></li>
                                                <li><button class="dropdown-item dropdown-item-custom delete" onclick="deleteAddress('<%= address._id %>', '<%= address.fullName %>')">
                                                    <i class="fas fa-trash me-2"></i> Delete
                                                </button></li>
                                            </ul>
                                        </div>
                                    </div>
                                    <div class="address-name"><%= address.fullName %></div>
                                    <div class="address-phone"><%= address.phoneOne %></div>
                                    <div class="address-details">
                                        <%= address.area %>, <%= address.locality %>, <%= address.district %>, <%= address.state %> - <%= address.pin %> 
                                        <% if (address.landmark) { %>
                                            , Near <%= address.landmark %>
                                        <% } %>
                                        (<%= address.phoneTwo ? address.phoneTwo : '' %>)
                                    </div>
                                    
                                    <!-- Hidden data for JavaScript access -->
                                    <script type="application/json" class="address-data">
                                        {
                                            "id": "<%= address._id %>",
                                            "fullName": "<%= address.fullName %>",
                                            "phoneOne": "<%= address.phoneOne %>",
                                            "phoneTwo": "<%= address.phoneTwo || '' %>",
                                            "pin": "<%= address.pin %>",
                                            "locality": "<%= address.locality %>",
                                            "area": "<%= address.area %>",
                                            "district": "<%= address.district %>",
                                            "state": "<%= address.state %>",
                                            "country": "<%= address.country %>",
                                            "landmark": "<%= address.landmark || '' %>",
                                            "addressType": "<%= address.addressType %>"
                                        }
                                    </script>
                                </div>
                            <% }) %>
                        <% } else { %>
                            <div class="empty-state">
                                <i class="fas fa-map-marker-alt"></i>
                                <h4>No Addresses Found</h4>
                                <p>You haven't added any addresses yet. Add your first address to get started.</p>
                            </div>
                        <% } %>
                    </div>

                    <!-- Add Address Form -->
                    <div class="form-section" id="addAddressForm">
                        <h4>Add A New Address</h4>
                        <form>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Name</label>
                                        <input type="text" class="form-control form-control-custom" name="fullName" placeholder="Enter your name" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">10-digit mobile number</label>
                                        <input type="tel" class="form-control form-control-custom" name="phoneOne" placeholder="Enter mobile number" required>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Pincode</label>
                                        <input type="text" class="form-control form-control-custom" name="pin" placeholder="Enter pincode" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Locality</label>
                                        <input type="text" class="form-control form-control-custom" name="locality" placeholder="Enter locality" required>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="form-label">Address (Area and Street)</label>
                                <textarea class="form-control form-control-custom" rows="3" name="area" placeholder="Enter complete address"></textarea required>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">City/District</label>
                                        <input type="text" class="form-control form-control-custom" name="district" placeholder="Enter city" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">State</label>
                                        <select class="form-control form-control-custom" name="state" required>
                                            <option value="">--Select State--</option>
                                            <option value="kerala">Kerala</option>
                                            <option value="tamilnadu">Tamil Nadu</option>
                                            <option value="karnataka">Karnataka</option>
                                            <option value="maharashtra">Maharashtra</option>
                                            <option value="delhi">Delhi</option>
                                            <option value="gujarat">Gujarat</option>
                                            <option value="rajasthan">Rajasthan</option>
                                            <option value="punjab">Punjab</option>
                                            <option value="haryana">Haryana</option>
                                            <option value="uttarpradesh">Uttar Pradesh</option>
                                            <option value="madhyapradesh">Madhya Pradesh</option>
                                            <option value="westbengal">West Bengal</option>
                                            <option value="bihar">Bihar</option>
                                            <option value="odisha">Odisha</option>
                                            <option value="telangana">Telangana</option>
                                            <option value="andhrapradesh">Andhra Pradesh</option>
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Country</label>
                                        <select class="form-control form-control-custom" name="country" required>
                                            <option value="india">India</option>
                                            <option value="usa">United States</option>
                                            <option value="uk">United Kingdom</option>
                                            <option value="canada">Canada</option>
                                            <option value="australia">Australia</option>
                                            <option value="germany">Germany</option>
                                            <option value="france">France</option>
                                            <option value="japan">Japan</option>
                                            <option value="singapore">Singapore</option>
                                            <option value="uae">United Arab Emirates</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Landmark (Optional)</label>
                                        <input type="text" class="form-control form-control-custom" placeholder="Enter landmark" name="landmark">
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="form-label">Alternate Phone (Optional)</label>
                                <input type="tel" class="form-control form-control-custom" placeholder="Enter alternate phone" name="phoneTwo">
                            </div>

                            <div class="form-group">
                                <label class="form-label">Address Type</label>
                                <div class="address-type-options">
                                    <div class="radio-option">
                                        <input type="radio" name="addressType" id="homeType" value="home" checked>
                                        <label for="homeType">Home</label>
                                    </div>
                                    <div class="radio-option">
                                        <input type="radio" name="addressType" id="workType" value="work">
                                        <label for="workType">Work</label>
                                    </div>
                                    <div class="radio-option">
                                        <input type="radio" name="addressType" id="workType" value="other">
                                        <label for="workType">Other</label>
                                    </div>
                                </div>
                            </div>

                            <div class="form-actions">
                                <button type="button" class="btn-cancel" onclick="hideAddForm()">Cancel</button>
                                <button type="submit" class="btn-save">Save</button>
                            </div>
                        </form>
                    </div>

                    <!-- Edit Address Form -->
                    <div class="form-section" id="editAddressForm">
                        <h4>Edit Address</h4>
                        <form> 
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Name</label>
                                        <input type="text" class="form-control form-control-custom" id="editName" value="Subeesh" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">10-digit mobile number</label>
                                        <input type="tel" class="form-control form-control-custom" id="editPhone" value="9048042970" required>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Pincode</label>
                                        <input type="text" class="form-control form-control-custom" id="editPincode" value="673602" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Locality</label>
                                        <input type="text" class="form-control form-control-custom" id="editLocality" value="Kozhikode, Mukkam, Akkottu Challi" required>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="form-label">Address (Area and Street)</label>
                                <textarea class="form-control form-control-custom" rows="3" id="editAddress" required>42</textarea>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">City/District/Town</label>
                                        <input type="text" class="form-control form-control-custom" id="editCity" value="Kozhikode" required>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">State</label>
                                        <select class="form-control form-control-custom" id="editState" required> 
                                            <option value="kerala" selected>Kerala</option>
                                            <option value="tamilnadu">Tamil Nadu</option>
                                            <option value="karnataka">Karnataka</option>
                                            <option value="maharashtra">Maharashtra</option>
                                            <option value="delhi">Delhi</option>
                                            <option value="gujarat">Gujarat</option>
                                            <option value="rajasthan">Rajasthan</option>
                                            <option value="punjab">Punjab</option>
                                            <option value="haryana">Haryana</option>
                                            <option value="uttarpradesh">Uttar Pradesh</option>
                                            <option value="madhyapradesh">Madhya Pradesh</option>
                                            <option value="westbengal">West Bengal</option>
                                            <option value="bihar">Bihar</option>
                                            <option value="odisha">Odisha</option>
                                            <option value="telangana">Telangana</option>
                                            <option value="andhrapradesh">Andhra Pradesh</option>
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Country</label>
                                        <select class="form-control form-control-custom" id="editCountry" required>
                                            <option value="india" selected>India</option>
                                            <option value="usa">United States</option>
                                            <option value="uk">United Kingdom</option>
                                            <option value="canada">Canada</option>
                                            <option value="australia">Australia</option>
                                            <option value="germany">Germany</option>
                                            <option value="france">France</option>
                                            <option value="japan">Japan</option>
                                            <option value="singapore">Singapore</option>
                                            <option value="uae">United Arab Emirates</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Landmark (Optional)</label>
                                        <input type="text" class="form-control form-control-custom" id="editLandmark" value="Najath Masjid">
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="form-label">Alternate Phone (Optional)</label>
                                <input type="tel" class="form-control form-control-custom" id="editAltPhone">
                            </div>

                            <div class="form-group">
                                <label class="form-label">Address Type</label>
                                <div class="address-type-options">
                                    <div class="radio-option">
                                        <input type="radio" name="editAddressType" id="editHomeType" value="home" checked>
                                        <label for="editHomeType">Home</label>
                                    </div>
                                    <div class="radio-option">
                                        <input type="radio" name="editAddressType" id="editWorkType" value="work">
                                        <label for="editWorkType">Work</label>
                                    </div>
                                    <div class="radio-option">
                                        <input type="radio" name="editAddressType" id="editWorkType" value="other">
                                        <label for="editWorkType">Other</label>
                                    </div>
                                </div>
                            </div>

                            <div class="form-actions">
                                <button type="button" class="btn-cancel" onclick="hideEditForm()">Cancel</button>
                                <button type="submit" class="btn-edit">Save</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Delete Address</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <i class="fas fa-exclamation-triangle"></i>
                    <h5>Are you sure?</h5>
                    <p id="deleteMessage">Do you really want to delete this address? This action cannot be undone.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn-delete-cancel" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn-delete-confirm" id="confirmDeleteBtn">Delete</button>
                </div>
            </div>
        </div>
    </div>
    
    <%- include('../../views/partials/user/footer.ejs') %>
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    
   <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize any needed functionality
        });

        let currentDeleteId = null;
        let currentDeleteName = null;

        function showAddForm() {
            const addForm = document.getElementById('addAddressForm');
            const editForm = document.getElementById('editAddressForm');
            
            editForm.classList.remove('show');
            addForm.classList.add('show');
            addForm.scrollIntoView({ behavior: 'smooth', block: 'start' });
            clearAddForm();
        }

        function hideAddForm() {
            document.getElementById('addAddressForm').classList.remove('show');
        }

        function showEditForm() {
            const editForm = document.getElementById('editAddressForm');
            const addForm = document.getElementById('addAddressForm');
            
            addForm.classList.remove('show');
            editForm.classList.add('show');
            editForm.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }

        function hideEditForm() {
            document.getElementById('editAddressForm').classList.remove('show');
        }

        // Add Address Function
        document.querySelector('#addAddressForm form').addEventListener('submit', async function(e) {
            e.preventDefault();

        // Clear all previous errors
        clearAllErrors(this);

        // Validate required fields
        if (!validateRequiredFields(this)) {
            return;
        }

        // Validate phone number
        const phoneInput = this.querySelector('input[name="phoneOne"]');
        if (phoneInput.value.length !== 10) {
            showFieldError(phoneInput, 'Phone number must be exactly 10 digits');
            return;
        }

        // Validate alternate phone if provided
        const altPhoneInput = this.querySelector('input[name="phoneTwo"]');
        if (altPhoneInput.value.length > 0 && altPhoneInput.value.length !== 10) {
            showFieldError(altPhoneInput, 'Phone number must be exactly 10 digits');
            return;
        }
            
            const formData = new FormData(this);
            const addressData = Object.fromEntries(formData.entries());
            
            try {
                const response = await fetch('/account/address/add', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(addressData)
                });
                
                const result = await response.json();
                
                if (result.success) {
                showSuccessMessage(result.message);
                hideAddForm();
                // Store scroll position before reload
                sessionStorage.setItem('scrollToTop', 'true');
                location.reload();
                } else {
                    showErrorMessage(result.message);
                }
            } catch (error) {
                showErrorMessage('Error adding address');
            }
        });

        // Edit Address Function
        function editAddress(addressId) {
            const addressCard = document.querySelector(`[data-address-id="${addressId}"]`);
            const addressDataScript = addressCard.querySelector('.address-data');
            const addressData = JSON.parse(addressDataScript.textContent);
            
            // Populate form fields
            document.getElementById('editName').value = addressData.fullName;
            document.getElementById('editPhone').value = addressData.phoneOne;
            document.getElementById('editPincode').value = addressData.pin;
            document.getElementById('editLocality').value = addressData.locality;
            document.getElementById('editAddress').value = addressData.area;
            document.getElementById('editCity').value = addressData.district;
            document.getElementById('editState').value = addressData.state;
            document.getElementById('editCountry').value = addressData.country;
            document.getElementById('editLandmark').value = addressData.landmark;
            document.getElementById('editAltPhone').value = addressData.phoneTwo;
            
            // Set address type
            document.querySelector(`input[name="editAddressType"][value="${addressData.addressType}"]`).checked = true;
            
            // Store addressId for form submission
            document.querySelector('#editAddressForm form').dataset.addressId = addressId;
            
            showEditForm();
        }

        // Update Edit Form Submission
        document.querySelector('#editAddressForm form').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const addressId = this.dataset.addressId;

            // Clear all previous errors
            clearAllErrors(this);

            if (!validateRequiredFields(this)) {
                return;
            }

            // Validate phone number specifically
            const phoneInput = document.getElementById('editPhone');
            if (phoneInput.value.length !== 10) {
                showFieldError(phoneInput, 'Phone number must be exactly 10 digits');
                return;
            }

            // Validate alternate phone if provided
            const altPhoneInput = document.getElementById('editAltPhone');
            if (altPhoneInput.value.length > 0 && altPhoneInput.value.length !== 10) {
                showFieldError(altPhoneInput, 'Phone number must be exactly 10 digits');
                return;
            }
            
            // Get form data manually to ensure all fields are included
            const formData = {
                fullName: document.getElementById('editName').value.trim(),
                phoneOne: document.getElementById('editPhone').value.trim(),
                phoneTwo: document.getElementById('editAltPhone').value.trim() || null,
                pin: document.getElementById('editPincode').value.trim(),
                locality: document.getElementById('editLocality').value.trim(),
                area: document.getElementById('editAddress').value.trim(),
                district: document.getElementById('editCity').value.trim(),
                state: document.getElementById('editState').value,
                country: document.getElementById('editCountry').value,
                landmark: document.getElementById('editLandmark').value.trim() || null,
                addressType: document.querySelector('input[name="editAddressType"]:checked').value
            };
            
            // Client-side validation
            if (!formData.fullName || !formData.phoneOne || !formData.pin || !formData.locality || 
                !formData.area || !formData.district || !formData.state || !formData.country || !formData.addressType) {
                showErrorMessage('Please fill all required fields');
                return;
            }
            
            try {
                const response = await fetch(`/account/address/edit/${addressId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData)
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showSuccessMessage(result.message);
                    hideEditForm();
                    // Store scroll position before reload
                    sessionStorage.setItem('scrollToTop', 'true');
                    location.reload();
                }else {
                    showErrorMessage(result.message);
                }
            } catch (error) {
                showErrorMessage('Error updating address');
            }
        });

        // Delete Address Function
        function deleteAddress(addressId, addressName) {
            currentDeleteId = addressId;
            currentDeleteName = addressName;
            
            const message = document.getElementById('deleteMessage');
            message.textContent = `Do you really want to delete ${addressName}'s address? This action cannot be undone.`;
            
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }

        async function confirmDelete() {
            if (currentDeleteId) {
                try {
                    const response = await fetch(`/account/address/delete/${currentDeleteId}`, {
                        method: 'DELETE'
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        const addressCard = document.querySelector(`[data-address-id="${currentDeleteId}"]`);
                        if (addressCard) {
                            addressCard.remove();
                            showSuccessMessage(result.message);
                        }
                    } else {
                        showErrorMessage(result.message);
                    }
                } catch (error) {
                    showErrorMessage('Error deleting address');
                }
                
                const deleteModal = bootstrap.Modal.getInstance(document.getElementById('deleteModal'));
                deleteModal.hide();
                
                currentDeleteId = null;
                currentDeleteName = null;
            }
        }

        // Set Default Address Function
        async function setDefaultAddress(addressId) {
            try {
                const response = await fetch(`/account/address/default/${addressId}`, {
                    method: 'PATCH'
                });
                
                const result = await response.json();
                
               if (result.success) {
                    showSuccessMessage(result.message);
                    // Store scroll position before reload
                    sessionStorage.setItem('scrollToTop', 'true');
                    location.reload(); // Reload to update UI
                } else {
                    showErrorMessage(result.message);
                }
            } catch (error) {
                showErrorMessage('Error setting default address');
            }
        }

        function clearAddForm() {
            document.querySelector('#addAddressForm form').reset();
        }

        function showSuccessMessage(message) {
            const alert = document.createElement('div');
            alert.className = 'alert alert-success alert-dismissible fade show position-fixed';
            alert.style.cssText = 'top: 100px; right: 20px; z-index: 9999; max-width: 350px;';
            alert.innerHTML = `${message}<button type="button" class="btn-close" data-bs-dismiss="alert"></button>`;
            document.body.appendChild(alert);
            
            setTimeout(() => {
                if (alert.parentNode) alert.remove();
            }, 5000);
        }

        function showErrorMessage(message) {
            const alert = document.createElement('div');
            alert.className = 'alert alert-danger alert-dismissible fade show position-fixed';
            alert.style.cssText = 'top: 100px; right: 20px; z-index: 9999; max-width: 350px;';
            alert.innerHTML = `${message}<button type="button" class="btn-close" data-bs-dismiss="alert"></button>`;
            document.body.appendChild(alert);
            
            setTimeout(() => {
                if (alert.parentNode) alert.remove();
            }, 5000);
        }


        function setupPhoneValidation() {
            const phoneInputs = document.querySelectorAll('input[name="phoneOne"], #editPhone, input[name="phoneTwo"], #editAltPhone');
            
            phoneInputs.forEach(input => {
                input.addEventListener('input', function(e) {
                    // Remove any non-digit characters
                    this.value = this.value.replace(/\D/g, '');
                    
                    // Limit to 10 digits
                    if (this.value.length > 10) {
                        this.value = this.value.slice(0, 10);
                    }
                });
                
                input.addEventListener('blur', function(e) {
                    if (this.value.length > 0 && this.value.length < 10) {
                        showFieldError(this, 'Phone number must be exactly 10 digits');
                    } else {
                        clearFieldError(this);
                    }
                });
            });
        }

        function setupRealTimeValidation() {
            const forms = document.querySelectorAll('#addAddressForm form, #editAddressForm form');
            
            forms.forEach(form => {
                const requiredFields = form.querySelectorAll('input[required], select[required], textarea[required]');
                
                requiredFields.forEach(field => {
                    field.addEventListener('blur', function() {
                        if (!this.value.trim()) {
                            showFieldError(this, 'This field is required');
                        } else {
                            clearFieldError(this);
                        }
                    });
                    
                    field.addEventListener('input', function() {
                        if (this.value.trim() && this.classList.contains('error')) {
                            clearFieldError(this);
                        }
                    });
                });
            });
        }

        // Call this function when document loads
       document.addEventListener('DOMContentLoaded', function() {
            setupPhoneValidation();
            setupRealTimeValidation();
            
            // Check if we need to scroll to top after reload
            if (sessionStorage.getItem('scrollToTop')) {
                window.scrollTo(0, 0);
                sessionStorage.removeItem('scrollToTop');
            }
        });
        document.getElementById('confirmDeleteBtn').addEventListener('click', confirmDelete);

        function showFieldError(input, message) {
            clearFieldError(input);
            
            const errorDiv = document.createElement('div');
            errorDiv.className = 'field-error-message';
            errorDiv.textContent = message;
            
            input.classList.add('error');
            input.parentNode.appendChild(errorDiv);
        }

       function clearFieldError(input) {
            const existingError = input.parentNode.querySelector('.field-error-message');
            if (existingError) {
                existingError.remove();
            }
            input.classList.remove('error');
        }

        function clearAllErrors(form) {
            const errorMessages = form.querySelectorAll('.field-error-message');
            const errorInputs = form.querySelectorAll('.form-control-custom.error');
            
            errorMessages.forEach(error => error.remove());
            errorInputs.forEach(input => input.classList.remove('error'));
        }

      function validateRequiredFields(form) {
            let isValid = true;
            const requiredFields = form.querySelectorAll('input[required], select[required], textarea[required]');
            
            requiredFields.forEach(field => {
                if (!field.value.trim()) {
                    showFieldError(field, 'This field is required');
                    isValid = false;
                }
            });
            
            return isValid;
        }
    </script>
</body>
</html>