<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Elevant - Page Not Found</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-green: #4ECDC4;
            --secondary-green: #45B7B8;
            --coral: #FF6B6B;
            --light-green: #E8F8F5;
            --dark-text: #2C3E50;
            --error-red: #e74c3c;
            --warning-orange: #f39c12;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #A8E6CF 0%, #88D8A3 100%);
            min-height: 100vh;
            margin: 0;
            padding: 20px;
        }

        .main-container {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
            max-width: 1200px;
            margin: 0 auto;
        }

        /* Header Styles */
        .header {
            padding: 20px 30px;
            background: white;
            border-bottom: 1px solid #f0f0f0;
        }

        .logo {
            display: flex;
            align-items: center;
            font-size: 24px;
            font-weight: 600;
            color: var(--primary-green);
            text-decoration: none;
        }

        .logo i {
            margin-right: 8px;
            font-size: 28px;
        }

        .nav-menu {
            display: flex;
            align-items: center;
            gap: 30px;
            margin: 0;
            padding: 0;
            list-style: none;
        }

        .nav-menu li a {
            color: var(--dark-text);
            text-decoration: none;
            font-weight: 500;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            transition: color 0.3s ease;
        }

        .nav-menu li a:hover {
            color: var(--primary-green);
        }

        .login-btn {
            background: var(--light-green);
            color: var(--primary-green);
            padding: 8px 20px;
            border-radius: 20px;
            text-decoration: none;
            font-weight: 600;
            font-size: 12px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            transition: all 0.3s ease;
        }

        .login-btn:hover {
            background: var(--primary-green);
            color: white;
        }

        /* Mobile menu toggle */
        .navbar-toggler {
            border: none;
            padding: 4px 8px;
        }

        .navbar-toggler:focus {
            box-shadow: none;
        }

        /* Content Styles */
        .content-section {
            padding: 60px 30px;
            min-height: 500px;
        }

        .error-title {
            font-size: 3.5rem;
            font-weight: 700;
            color: var(--primary-green);
            margin-bottom: 20px;
            line-height: 1.2;
        }

        .error-subtitle {
            font-size: 2rem;
            font-weight: 600;
            color: var(--primary-green);
            margin-bottom: 30px;
        }

        .error-description {
            color: var(--dark-text);
            font-size: 16px;
            line-height: 1.6;
            margin-bottom: 20px;
            max-width: 400px;
        }

        /* Error Message Styles */
        .error-message-container {
            margin-bottom: 30px;
        }

        .error-message {
            background: #fff5f5;
            border: 2px solid #fed7d7;
            color: var(--error-red);
            padding: 15px 20px;
            border-radius: 10px;
            font-size: 14px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 10px;
            animation: slideIn 0.5s ease;
            max-width: 500px;
        }

        .error-message.warning {
            background: #fffaf0;
            border-color: #fbd38d;
            color: var(--warning-orange);
        }

        .error-message.info {
            background: #ebf8ff;
            border-color: #90cdf4;
            color: #3182ce;
        }

        .error-message i {
            font-size: 16px;
            flex-shrink: 0;
        }

        .error-code {
            background: var(--error-red);
            color: white;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 600;
            margin-left: 10px;
        }

        .back-home-btn {
            background: var(--coral);
            color: white;
            padding: 12px 30px;
            border: none;
            border-radius: 25px;
            font-weight: 600;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            margin-right: 15px;
        }

        .back-home-btn:hover {
            background: #FF5252;
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(255, 107, 107, 0.3);
        }

        .retry-btn {
            background: var(--primary-green);
            color: white;
            padding: 12px 30px;
            border: none;
            border-radius: 25px;
            font-weight: 600;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            cursor: pointer;
        }

        .retry-btn:hover {
            background: var(--secondary-green);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(78, 205, 196, 0.3);
        }

        /* Illustration Styles */
        .illustration-container {
            display: flex;
            justify-content: center;
            align-items: center;
            position: relative;
            min-height: 400px;
        }

        .illustration {
            width: 100%;
            max-width: 500px;
            height: auto;
            border-radius: 20px;
        }

        /* Background decorative elements */
        .bg-decoration {
            position: absolute;
            border-radius: 50%;
            background: var(--light-green);
            opacity: 0.3;
            z-index: -1;
        }

        .bg-decoration.large {
            width: 300px;
            height: 300px;
            top: -50px;
            right: -50px;
        }

        .bg-decoration.medium {
            width: 150px;
            height: 150px;
            bottom: -30px;
            left: -30px;
        }

        .bg-decoration.small {
            width: 80px;
            height: 80px;
            top: 50%;
            right: 20%;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            body {
                padding: 10px;
            }

            .header {
                padding: 15px 20px;
            }

            .content-section {
                padding: 40px 20px;
                text-align: center;
            }

            .error-title {
                font-size: 2.5rem;
            }

            .error-subtitle {
                font-size: 1.5rem;
            }

            .error-description {
                max-width: 100%;
                margin-bottom: 20px;
            }

            .error-message {
                max-width: 100%;
            }

            .nav-menu {
                flex-direction: column;
                gap: 15px;
                margin-top: 20px;
            }

            .illustration-container {
                margin-top: 30px;
                min-height: 300px;
            }

            .back-home-btn, .retry-btn {
                display: block;
                margin: 10px 0;
                text-align: center;
            }
        }

        @media (max-width: 576px) {
            .error-title {
                font-size: 2rem;
            }

            .error-subtitle {
                font-size: 1.3rem;
            }

            .error-description {
                font-size: 14px;
            }

            .back-home-btn, .retry-btn {
                padding: 10px 25px;
                font-size: 12px;
            }

            .error-message {
                font-size: 13px;
                padding: 12px 15px;
            }
        }

        /* Animation */
        .fade-in {
            animation: fadeIn 0.8s ease-in;
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateX(-20px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        .bounce {
            animation: bounce 2s infinite;
        }

        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% {
                transform: translateY(0);
            }
            40% {
                transform: translateY(-10px);
            }
            60% {
                transform: translateY(-5px);
            }
        }

        .shake {
            animation: shake 0.5s ease-in-out;
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }
    </style>
</head>
<body>
    <div class="main-container">
        <!-- Header -->
        <nav class="navbar navbar-expand-lg header">
            <div class="container-fluid p-0">
                <a class="logo" href="#" onclick="goHome()">
                    <i class="fas fa-cloud"></i>
                    Elevant
                </a>
                
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>
                
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav ms-auto nav-menu">
                        <li class="nav-item">
                            <a class="nav-link" href="#" onclick="navigateTo('home')">HOME</a>
                        </li>    
                        <li class="nav-item">
                            <a class="nav-link" href="#" onclick="navigateTo('about')">ABOUT US</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#" onclick="navigateTo('about')">CONTACT US</a>
                        </li>
                        <li class="nav-item">
                            <a class="login-btn" href="/signIn" onclick="login('signIn')">SIGN IN</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>

        <!-- Main Content -->
        <div class="content-section">
            <div class="container-fluid">
                <div class="row align-items-center">
                    <div class="col-lg-6 col-md-6">
                        <div class="fade-in">
                            <h1 class="error-title">Oops,</h1>
                            <h2 class="error-subtitle">Something went wrong!</h2>
                            
                            <!-- Default description -->
                            <p class="error-description">
                                We are very sorry for the inconvenience. 
                                An unexpected error occurred while processing your request.
                            </p>

                            <!-- Dynamic Error Message Section -->
                            <div class="error-message-container">
                                <!-- This will be populated by backend data -->
                                <div id="errorMessage" class="error-message" style="display: none;">
                                    <i class="fas fa-exclamation-triangle"></i>
                                    <span id="errorText">Error message will appear here</span>
                                    <span id="errorCode" class="error-code" style="display: none;">500</span>
                                </div>
                            </div>

                            <div class="button-group">
                                <a href="#" class="back-home-btn bounce" onclick="goHome()">
                                    BACK TO HOME
                                </a>
                                <button class="retry-btn" onclick="retryAction()">
                                    <i class="fas fa-redo"></i> TRY AGAIN
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6">
                        <div class="illustration-container">
                            <div class="bg-decoration large"></div>
                            <div class="bg-decoration medium"></div>
                            <div class="bg-decoration small"></div>
                            
                            <!-- SVG Illustration -->
                            <svg class="illustration" viewBox="0 0 500 400" xmlns="http://www.w3.org/2000/svg">
                                <!-- Background landscape -->
                                <ellipse cx="250" cy="350" rx="200" ry="50" fill="#A8E6CF" opacity="0.6"/>
                                
                                <!-- Hills -->
                                <path d="M50 300 Q150 250 250 300 Q350 250 450 300 L450 400 L50 400 Z" fill="#4ECDC4" opacity="0.7"/>
                                
                                <!-- Plants -->
                                <path d="M80 320 Q85 300 90 320 Q95 300 100 320" stroke="#2E8B57" stroke-width="3" fill="none"/>
                                <path d="M380 310 Q390 290 400 310 Q410 290 420 310" stroke="#2E8B57" stroke-width="3" fill="none"/>
                                <ellipse cx="85" cy="325" rx="8" ry="4" fill="#228B22"/>
                                <ellipse cx="95" cy="325" rx="8" ry="4" fill="#228B22"/>
                                <ellipse cx="390" cy="315" rx="10" ry="5" fill="#228B22"/>
                                <ellipse cx="410" cy="315" rx="10" ry="5" fill="#228B22"/>
                                
                                <!-- Person (confused/sad) -->
                                <!-- Body -->
                                <ellipse cx="250" cy="280" rx="25" ry="35" fill="#4A90E2"/>
                                
                                <!-- Arms (raised in confusion) -->
                                <ellipse cx="225" cy="250" rx="8" ry="20" fill="#FFB6C1" transform="rotate(-45 225 250)"/>
                                <ellipse cx="275" cy="250" rx="8" ry="20" fill="#FFB6C1" transform="rotate(45 275 250)"/>
                                
                                <!-- Legs -->
                                <ellipse cx="240" cy="320" rx="8" ry="25" fill="#2C3E50"/>
                                <ellipse cx="260" cy="320" rx="8" ry="25" fill="#2C3E50"/>
                                
                                <!-- Shoes -->
                                <ellipse cx="240" cy="345" rx="12" ry="6" fill="#000"/>
                                <ellipse cx="260" cy="345" rx="12" ry="6" fill="#000"/>
                                
                                <!-- Head -->
                                <circle cx="250" cy="220" r="25" fill="#FFB6C1"/>
                                
                                <!-- Hair -->
                                <path d="M225 210 Q250 190 275 210 Q275 230 250 235 Q225 230 225 210" fill="#2C3E50"/>
                                
                                <!-- Face (confused expression) -->
                                <circle cx="242" cy="215" r="2" fill="#000"/>
                                <circle cx="258" cy="215" r="2" fill="#000"/>
                                <path d="M245 230 Q250 225 255 230" stroke="#000" stroke-width="1.5" fill="none"/>
                                
                                <!-- Question marks -->
                                <text x="200" y="180" font-family="Arial, sans-serif" font-size="20" fill="#FF6B6B" opacity="0.8">?</text>
                                <text x="300" y="160" font-family="Arial, sans-serif" font-size="24" fill="#FF6B6B" opacity="0.6">?</text>
                                <text x="320" y="200" font-family="Arial, sans-serif" font-size="18" fill="#FF6B6B" opacity="0.7">?</text>
                                
                                <!-- Error symbol -->
                                <circle cx="350" cy="100" r="25" fill="#e74c3c" opacity="0.8"/>
                                <rect x="345" y="90" width="4" height="15" fill="white" rx="2"/>
                                <circle cx="347" cy="110" r="2" fill="white"/>
                                
                                <!-- Background circles -->
                                <circle cx="150" cy="150" r="40" fill="#E8F8F5" opacity="0.5"/>
                                <circle cx="350" cy="180" r="60" fill="#E8F8F5" opacity="0.3"/>
                                <circle cx="400" cy="120" r="30" fill="#E8F8F5" opacity="0.4"/>
                            </svg>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Initialize page with backend data
        document.addEventListener('DOMContentLoaded', function() {
          
            // In the <script> section, replace the hardcoded errorData with:
            const errorData = {
                success: <%= JSON.stringify(locals.success || false) %>,
                message: '<%= locals.message || "An unexpected error occurred" %>',
                statusCode: <%= locals.statusCode || 500 %>,
                timestamp: '<%= locals.timestamp || new Date().toISOString() %>',
                path: '<%= locals.path || "" %>',
                canRetry: <%= JSON.stringify(locals.canRetry || true) %>
            };

            // Display error message if available
            displayErrorMessage(errorData);

            // Add interactive effects
            setupInteractiveEffects();
        });

        function displayErrorMessage(errorData) {
            const errorMessageEl = document.getElementById('errorMessage');
            const errorTextEl = document.getElementById('errorText');
            const errorCodeEl = document.getElementById('errorCode');

            if (errorData && errorData.message) {
                errorTextEl.textContent = errorData.message;
                
                // Set error type based on status code
                if (errorData.statusCode) {
                    errorCodeEl.textContent = errorData.statusCode;
                    errorCodeEl.style.display = 'inline-block';
                    
                    // Update error style based on status code
                    if (errorData.statusCode >= 500) {
                        errorMessageEl.className = 'error-message'; // Server error (red)
                        errorMessageEl.querySelector('i').className = 'fas fa-exclamation-triangle';
                    } else if (errorData.statusCode >= 400) {
                        errorMessageEl.className = 'error-message warning'; // Client error (orange)
                        errorMessageEl.querySelector('i').className = 'fas fa-exclamation-circle';
                    } else {
                        errorMessageEl.className = 'error-message info'; // Info (blue)
                        errorMessageEl.querySelector('i').className = 'fas fa-info-circle';
                    }
                }
                
                // Show the error message
                errorMessageEl.style.display = 'flex';
                
                // Add shake animation to draw attention
                setTimeout(() => {
                    errorMessageEl.classList.add('shake');
                    setTimeout(() => {
                        errorMessageEl.classList.remove('shake');
                    }, 500);
                }, 200);
            }
        }

        // Navigation functions
        function goHome() {
            showNotification('Redirecting to home page...');
            setTimeout(() => {
                window.location.href = '/';
            }, 1000);
        }

        function navigateTo(page) {
            showNotification(`Navigating to ${page} page...`);
            setTimeout(() => {
                window.location.href = `/${page}`;
            }, 1000);
        }

        function login() {
            showNotification('Opening login page...');
            setTimeout(() => {
                window.location.href = '/signIn';
            }, 1000);
        }

        function retryAction() {
            showNotification('Retrying request...', 'info');
            
            // Add loading animation to retry button
            const retryBtn = document.querySelector('.retry-btn');
            const originalContent = retryBtn.innerHTML;
            retryBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> RETRYING...';
            retryBtn.disabled = true;
            
            // Simulate retry (reload the page or make the original request)
            setTimeout(() => {
                window.location.reload();
            }, 2000);
        }

        // Notification function
        function showNotification(message, type = 'success') {
            const notification = document.createElement('div');
            
            let bgColor = 'var(--primary-green)';
            let icon = 'fas fa-check-circle';
            
            if (type === 'error') {
                bgColor = 'var(--error-red)';
                icon = 'fas fa-exclamation-triangle';
            } else if (type === 'warning') {
                bgColor = 'var(--warning-orange)';
                icon = 'fas fa-exclamation-circle';
            } else if (type === 'info') {
                bgColor = '#3182ce';
                icon = 'fas fa-info-circle';
            }
            
            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: ${bgColor};
                color: white;
                padding: 15px 20px;
                border-radius: 10px;
                box-shadow: 0 5px 15px rgba(0,0,0,0.2);
                z-index: 1000;
                font-weight: 500;
                animation: slideInNotification 0.3s ease;
                display: flex;
                align-items: center;
                gap: 10px;
                max-width: 300px;
            `;
            
            notification.innerHTML = `<i class="${icon}"></i><span>${message}</span>`;

            // Add animation keyframes if not exists
            if (!document.querySelector('#notification-styles')) {
                const style = document.createElement('style');
                style.id = 'notification-styles';
                style.textContent = `
                    @keyframes slideInNotification {
                        from {
                            transform: translateX(100%);
                            opacity: 0;
                        }
                        to {
                            transform: translateX(0);
                            opacity: 1;
                        }
                    }
                `;
                document.head.appendChild(style);
            }

            document.body.appendChild(notification);

            // Remove notification after 3 seconds
            setTimeout(() => {
                notification.style.animation = 'slideInNotification 0.3s ease reverse';
                setTimeout(() => {
                    if (document.body.contains(notification)) {
                        document.body.removeChild(notification);
                    }
                }, 300);
            }, 3000);
        }

        // Setup interactive effects
        function setupInteractiveEffects() {
            // Add hover effects to interactive elements
            const interactiveElements = document.querySelectorAll('a, button');
            interactiveElements.forEach(element => {
                element.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-2px)';
                });
                element.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0)';
                });
            });

            // Add click animation to buttons
            const buttons = document.querySelectorAll('.back-home-btn, .login-btn, .retry-btn');
            buttons.forEach(button => {
                button.addEventListener('click', function(e) {
                    if (!this.classList.contains('retry-btn')) {
                        e.preventDefault();
                    }
                    
                    // Create ripple effect
                    createRippleEffect(e, this);
                });
            });
        }

        function createRippleEffect(e, element) {
            const ripple = document.createElement('span');
            const rect = element.getBoundingClientRect();
            const size = Math.max(rect.width, rect.height);
            const x = e.clientX - rect.left - size / 2;
            const y = e.clientY - rect.top - size / 2;
            
            ripple.style.cssText = `
                position: absolute;
                width: ${size}px;
                height: ${size}px;
                left: ${x}px;
                top: ${y}px;
                background: rgba(255,255,255,0.3);
                border-radius: 50%;
                transform: scale(0);
                animation: ripple 0.6s ease-out;
                pointer-events: none;
            `;
            
            element.style.position = 'relative';
            element.style.overflow = 'hidden';
            element.appendChild(ripple);
            
            // Add ripple animation
            if (!document.querySelector('#ripple-styles')) {
                const style = document.createElement('style');
                style.id = 'ripple-styles';
                style.textContent = `
                    @keyframes ripple {
                        to {
                            transform: scale(2);
                            opacity: 0;
                        }
                    }
                `;
                document.head.appendChild(style);
            }
            
            setTimeout(() => {
                if (element.contains(ripple)) {
                    ripple.remove();
                }
            }, 600);
        }

        // Add keyboard navigation
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Enter' && e.target.tagName === 'A') {
                e.target.click();
            }
            if (e.key === 'Escape') {
                // Close mobile menu if open
                const navbarCollapse = document.querySelector('.navbar-collapse');
                if (navbarCollapse && navbarCollapse.classList.contains('show')) {
                    bootstrap.Collapse.getInstance(navbarCollapse).hide();
                }
            }
            // Retry on F5 or Ctrl+R
            if (e.key === 'F5' || (e.ctrlKey && e.key === 'r')) {
                e.preventDefault();
                retryAction();
            }
        });

        // Handle page visibility change (useful for retry logic)
        document.addEventListener('visibilitychange', function() {
            if (!document.hidden) {
                // Page became visible again, could be a good time to retry
                console.log('Page visible again');
            }
        });
    </script>
</body>
</html>