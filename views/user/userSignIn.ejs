<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Sign In</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
   <link rel="stylesheet" href="/user/css/signIn.css"> 
  
</head>

<body>
  <div class="container d-flex justify-content-center align-items-center vh-100">
    <div class="col-md-6 col-lg-5">
      <div class="card p-4 fade-in">
        <h3 class="text-center mb-4">Welcome Back</h3>

        <div id="messageContainer"></div>

        <form id="signInForm">
          <div class="mb-3">
            <label class="form-label">Email ID or Phone No</label>
            <input type="text" name="emailOrPhone" class="form-control" placeholder="Enter email or phone" required/>
          </div>

          <div class="mb-2 position-relative">
            <label class="form-label">Password</label>
            <input type="password" name="password" class="form-control" id="passwordInput" placeholder="Enter password" required/>
            <i class="bi bi-eye-slash password-toggle" id="togglePassword"></i>
          </div>

          <div class="mb-3 text-end">
            <a href="/changePassword" class="text-primary" style="font-size: 0.9rem;">Forgot Password?</a>
          </div>

          <div class="d-grid gap-2 mb-2">
            <button type="submit" class="btn btn-custom"  id="signInBtn">Sign In</button>
            <a href="/auth/google" class="btn google-btn">
              <i class="bi bi-google me-1"></i> Sign in with Google
          </a>
          </div>

          <div class="text-center mt-2">
            <span>New User? </span>
            <a href="/signUp" class="fw-bold text-decoration-underline text-primary">Sign Up...</a>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Bootstrap JS -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    // Password toggle functionality
    const togglePassword = document.getElementById('togglePassword');
    const passwordInput = document.getElementById('passwordInput');

    togglePassword.addEventListener('click', () => {
      const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
      passwordInput.setAttribute('type', type);
      togglePassword.classList.toggle('bi-eye');
      togglePassword.classList.toggle('bi-eye-slash');
    });

    // AJAX form submission
    document.getElementById('signInForm').addEventListener('submit', async (e) => {
      e.preventDefault();

      const signInBtn = document.getElementById('signInBtn');
      const messageContainer = document.getElementById('messageContainer');

      const formData = new FormData(e.target);
      const emailOrPhone = formData.get('emailOrPhone')
      const password = formData.get('password');

      signInBtn.disabled = true;
      signInBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Signing In...';

      messageContainer.innerHTML = '';

      try {
        const response = await fetch('/signIn', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({emailOrPhone , password})
        });

        if(response.ok){
          window.location.href = '/home';
        }else{
          const errorData = await response.json();
          showMessage(errorData.message, 'danger');
        }

      } catch (error) {
        console.error('sign in error : ', error);
        showMessage('someething went wrong. please try again.', 'danger');
        
      }finally{
        signInBtn.disabled = false;
        signInBtn.innerHTML = 'Sign In';
      }

    });

    //for google auth
    document.addEventListener('DOMContentLoaded', () => {
          const urlParams = new URLSearchParams(window.location.search);
          const error = urlParams.get('error');
          
          if (error === 'blocked') {
              showMessage('This user is blocked. Please contact us.', 'danger');
              window.history.replaceState({}, document.title, window.location.pathname);
          }
      });

    function showMessage(message, type){
      const messageContainer = document.getElementById('messageContainer');
      messageContainer.innerHTML = `
      <div class="alert alert-${type} alert-dismissible fade show" role="alert">
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="close"></button>
        </div>`;
    }


  </script>
</body>
</html>

